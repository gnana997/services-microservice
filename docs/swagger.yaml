basePath: /api/v1
definitions:
  handlers.ErrorResponse:
    properties:
      code:
        description: Machine-readable error code
        type: string
      details:
        description: Optional additional details
      message:
        description: Human-readable error message
        type: string
    type: object
  models.Pagination:
    properties:
      current_page:
        example: 1
        type: integer
      items_per_page:
        example: 10
        type: integer
      total_items:
        example: 50
        type: integer
      total_pages:
        example: 5
        type: integer
    type: object
  models.Service:
    properties:
      created_at:
        example: "2025-05-01T00:00:00Z"
        type: string
      description:
        example: Manages user authentication and profiles
        type: string
      id:
        example: 1
        type: integer
      name:
        example: User Service
        type: string
      updated_at:
        example: "2025-05-01T00:00:00Z"
        type: string
      version_count:
        example: 1
        type: integer
      versions:
        items:
          $ref: '#/definitions/models.Version'
        type: array
    type: object
  models.ServiceModel:
    properties:
      created_at:
        example: "2025-05-01T00:00:00Z"
        type: string
      description:
        example: Manages user authentication and profiles
        type: string
      id:
        example: 1
        type: integer
      name:
        example: User Service
        type: string
      updated_at:
        example: "2025-05-01T00:00:00Z"
        type: string
      version_count:
        example: 1
        type: integer
    type: object
  models.ServiceRequest:
    properties:
      description:
        example: Manages user authentication and profiles
        type: string
      name:
        example: User Service
        type: string
    type: object
  models.ServiceResponse:
    properties:
      pagination:
        $ref: '#/definitions/models.Pagination'
      services:
        items:
          $ref: '#/definitions/models.ServiceModel'
        type: array
    type: object
  models.Version:
    properties:
      created_at:
        example: "2025-05-01T00:00:00Z"
        type: string
      description:
        example: Initial release
        type: string
      id:
        example: 1
        type: integer
      is_active:
        example: true
        type: boolean
      service_id:
        example: 1
        type: integer
      updated_at:
        example: "2025-05-01T00:00:00Z"
        type: string
      version:
        example: 1.0.0
        type: string
    type: object
  models.VersionRequest:
    properties:
      description:
        example: Initial release
        type: string
      version:
        example: 1.0.0
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for managing services
  title: Services API
  version: "1.0"
paths:
  /services:
    get:
      description: Get a list of services with optional filtering, sorting, and pagination
      parameters:
      - description: Filter by service name (case-insensitive, partial match)
        in: query
        name: name
        type: string
      - description: Filter by service description (case-insensitive, partial match)
        in: query
        name: description
        type: string
      - default: created_at
        description: Sort field (name, created_at)
        in: query
        name: sort
        type: string
      - default: asc
        description: Sort order (asc, desc)
        in: query
        name: order
        type: string
      - default: 1
        description: Page number
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      responses:
        "200":
          description: List of services
          schema:
            $ref: '#/definitions/models.ServiceResponse'
        "500":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List services
      tags:
      - services
    post:
      consumes:
      - application/json
      description: Create a new service with the given name and description
      parameters:
      - description: Service details
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/models.ServiceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created service
          schema:
            $ref: '#/definitions/models.ServiceModel'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new service
      tags:
      - services
  /services/{sid}:
    delete:
      description: Delete a service with the given ID
      parameters:
      - description: Service ID
        in: path
        minimum: 1
        name: sid
        required: true
        type: integer
      responses:
        "204":
          description: Service deleted successfully
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Service not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a service
      tags:
      - services
    get:
      consumes:
      - application/json
      description: Get details of a service by ID
      parameters:
      - description: Service ID
        in: path
        minimum: 1
        name: sid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Service details
          schema:
            $ref: '#/definitions/models.Service'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Service not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a service
      tags:
      - services
    patch:
      consumes:
      - application/json
      description: Update a service with the given ID and details
      parameters:
      - description: Service ID
        in: path
        minimum: 1
        name: sid
        required: true
        type: integer
      - description: Service details
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/models.ServiceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated service
          schema:
            $ref: '#/definitions/models.ServiceModel'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Service not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Error message
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a service
      tags:
      - services
  /services/{sid}/versions:
    post:
      consumes:
      - application/json
      description: Create a new version for a service
      parameters:
      - description: Service ID
        in: path
        name: sid
        required: true
        type: integer
      - description: Version details
        in: body
        name: version
        required: true
        schema:
          $ref: '#/definitions/models.VersionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created version
          schema:
            $ref: '#/definitions/models.Version'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Failed to create version
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Create a new version
      tags:
      - versions
  /services/{sid}/versions/{vid}:
    delete:
      consumes:
      - application/json
      description: Delete a version by ID
      parameters:
      - description: Service ID
        in: path
        name: sid
        required: true
        type: integer
      - description: Version ID
        in: path
        name: vid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Version deleted successfully
        "400":
          description: Invalid version ID
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Version not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Failed to delete version
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Delete a version
      tags:
      - versions
    get:
      consumes:
      - application/json
      description: Get a version by ID
      parameters:
      - description: Service ID
        in: path
        name: sid
        required: true
        type: integer
      - description: Version ID
        in: path
        name: vid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Version details
          schema:
            $ref: '#/definitions/models.Version'
        "400":
          description: Invalid version ID
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Version not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Failed to get version
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get a version by ID
      tags:
      - versions
    put:
      consumes:
      - application/json
      description: Update a version by ID
      parameters:
      - description: Service ID
        in: path
        name: sid
        required: true
        type: integer
      - description: Version ID
        in: path
        name: vid
        required: true
        type: integer
      - description: Version details
        in: body
        name: version
        required: true
        schema:
          $ref: '#/definitions/models.VersionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated version
          schema:
            $ref: '#/definitions/models.Version'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Version not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Failed to update version
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Update a version
      tags:
      - versions
schemes:
- http
swagger: "2.0"
